# Use spring.profiles.active environment variable to chose other profiles
# e.g.: --spring.profiles.active=dev
server.forward-headers-strategy=NATIVE
server.tomcat.use-relative-redirects=true
spring.thymeleaf.mode=HTML

citizen-ui.app.version=1
agent.mode=false

services.bankdetails-version=1
services.circumstances-version=1
services.claimant-version=1
services.notification-version=1
services.validation-version=1
services.officesearch-version=1

citizen.session.timeout.seconds=1200

spring.messages.basename=i18n/layout,\
  i18n/index,\
  i18n/claimant,\
  i18n/dateofbirth,\
  i18n/common,\
  i18n/backdating,\
  i18n/summary,\
  i18n/nino,\
  i18n/eligibility,\
  i18n/footer,\
  i18n/claimstart,\
  i18n/personaldetails,\
  i18n/declaration,\
  i18n/confirmation,\
  i18n/ineligible,\
  i18n/juryservice,\
  i18n/ineligible,\
  i18n/about,\
  i18n/country,\
  i18n/previousemployment,\
  i18n/bankaccount,\
  i18n/education,\
  i18n/otherbenefits,\
  i18n/contactpreferences,\
  i18n/currentwork,\
  i18n/dates,\
  i18n/availability,\
  i18n/pensions/current, \
  i18n/citizen/cookie-policies, \
  i18n/citizen/cookie-details, \
  i18n/error/internal, \
  i18n/error/not-found, \
  i18n/error/session-timeout, \
  i18n/outsideukwork, \
  i18n/evidence, \
  i18n/sessiontimeout, \
  i18n/jobcentredetails, \
  i18n/accessibility

#Metrics related configurations
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
management.context-path=/

logging.level.root=WARN
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.level.uk.gov.dwp.jsa=INFO

layout.header.phasebanner.href.citizen=aff0c427
layout.header.phasebanner.href.citizen.welsh=f8cb1a98
layout.header.phasebanner.href.agent=f6a6a3cf

# Notification banner config
# Which AWS environment is service running on, to determine SSM request target
environment.aws.active=${ENVIRONMENT_AWS_ACTIVE}
banner.ssm.prefix=/nsjsa/citizen-ui/
banner.display.enabled=${BANNER_DISPLAY_ENABLED:false}
banner.border.colour=${BANNER_BORDER_COLOUR:blue}
banner.header.message=${BANNER_HEADER_MESSAGE:}
banner.header.message.welsh=${BANNER_HEADER_MESSAGE_WELSH:}
banner.body.message=${BANNER_BODY_MESSAGE:}
banner.body.message.welsh=${BANNER_BODY_MESSAGE_WELSH:}

# Check SSM every 5 minutes, requires service restart to be updated through SSM
banner.refresh.seconds=${BANNER_REFRESH_SECONDS:300}

# After how many seconds to disable update state, to indicate it was propagated to all apps. Defaults 90 seconds.
banner.update.disabled.seconds=${BANNER_UPDATE_DISABLED_SECONDS:90}

# Session warning popup (15min) and timeout (20min) timings
session.warning.timeout=900000
session.end.timeout=1200000

feedback.email=quarryhouse.userresearch.newstylejsa@dwp.gov.uk

spring.thymeleaf.render-hidden-markers-before-checkboxes=true

# AWS SSM Key to enable/disable the research volunteer message on the index page
banner.research-volunteer.enabled.key=banner.research-volunteer.enabled

cloud.aws.region.static=eu-west-2
spring.autoconfigure.exclude=org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration,org.springframework.cloud.aws.autoconfigure.cache.ElastiCacheAutoConfiguration,org.springframework.cloud.aws.autoconfigure.context.ContextCredentialsAutoConfiguration,org.springframework.cloud.aws.autoconfigure.context.ContextInstanceDataAutoConfiguration,org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration,org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration,org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration,org.springframework.cloud.aws.autoconfigure.jdbc.AmazonRdsDatabaseAutoConfiguration,org.springframework.cloud.aws.autoconfigure.mail.MailSenderAutoConfiguration,org.springframework.cloud.aws.autoconfigure.messaging.MessagingAutoConfiguration\,org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchExportAutoConfiguration,org.springframework.cloud.aws.autoconfigure.metrics.CloudWatchExportAutoConfiguration
